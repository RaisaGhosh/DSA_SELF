https://leetcode.com/problems/subsets/







Here I am mainitaing a stack or a record of all the combinations formed until now and when I get a new element I am just forming a new set of records by just adding this new element to the end of the previous combinations.

For [1,2,3] , intially we'll just have a list = []

Now we get 1,
[] and 1 = [1] , so now updated list  = [],[1]

Now we get 2,
[] and 2 = [2]
[1] and 2= [1,2] , so now updated list = [],[1],[2],[1,2]

Now we get 3,
[] and 3 = [3]
[1] and 3 = [1,3]
[2] and 3 = [2,3]
[1,2] and 3 = [1,2,3] , so now updated list = [],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]

```
class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        
        vector<vector<int> > ans;
        
        vector<int> A;
        
        ans.push_back(A);
        
        for(auto it1 : nums){
            A.clear();
            int n = ans.size();
            
            for(int i = 0 ;i< n;++i){
                A = ans[i];
                A.insert(A.end(),it1);
                ans.push_back(A);
            }
            
        }
        
        return ans;
    }
};
```

Time Complexity = O(n^2)    //not sure
Space Complexity = O(n)     //not sure

[Runtime: 0 ms, faster than 100.00% of C++ online submissions for Subsets.
Memory Usage: 7 MB, less than 87.43% of C++ online submissions for Subsets.]