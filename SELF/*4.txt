class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        
        unordered_map<int,int> hashMap;
        
        hashMap[0] = 1;
        
        int sum = 0 , result;
        
        for(int i=0;i<nums.size();++i){
            
            sum = sum + nums[i];
            
            if(hashMap.find(sum - k) != hashMap.end()) {
                cout<<sum<<endl;
                result = result + hashMap[sum - k];
            }    
            
            if(hashMap.find(sum) != hashMap.end()) 
                ++hashMap[sum];
            else
                hashMap[sum] = 1;
    
        }
        
        return result;
        
    }
};