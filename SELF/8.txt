https://leetcode.com/problems/move-zeroes/



Here we will be using the concept of 2 pointers,where one pointer will point & traverse through every element of the array and the other will point to the first occurence of 0 in the array.

So intially we keep the pointer to the first 0 at the starting index.

Now as we traverse through the array, if we find a non zero element we swap it with the first occuring 0 element and we increase the pointer that points to the first 0 by 1.

Eventually the pointer keeps increasing and finally will point to the index having the first 0 in the array.

```
class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        
        int p1 = 0;                      //line 1
        
        for(int i = 0; i<nums.size(); ++i){                     //line 2
            if(nums[i] != 0){                     //line 3
                swap(nums[p1],nums[i]);                     //line 4
                ++p1;                     //line 5
            }
        }
        
    }
};
```

Time Complexity : O(n)
Space Complexity : O(1)

[Runtime: 29 ms, faster than 77.76% of C++ online submissions for Move Zeroes.
Memory Usage: 19.1 MB, less than 98.07% of C++ online submissions for Move Zeroes.]